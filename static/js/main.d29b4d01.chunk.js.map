{"version":3,"sources":["redux/dialogs-reducer.js","imges/photo.jpg","api/api.js","components/Users/Users.module.css","imges/loading-gif.gif","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControl.js","serviceWorker.js","redux/auth-reducer.js","redux/app-reducer.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/login/Login.jsx","hoc/withSuspans.js","App.js","index.js","components/common/FormsControls/FormsControl.module.css","components/common/Preloader/Preloader.jsx","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","arguments","length","undefined","action","body","Object","C_Users_HP_Desktop_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","concat","C_Users_HP_Desktop_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","module","exports","__webpack_require__","p","d","__webpack_exports__","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","baseURL","withCredentials","headers","API-KEY","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","resultCode","unfollow","delete","getUserInfo","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","file","getAuth","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","item","selectedPage","nav","activeLink","Textarea","_ref","input","meta","props","C_Users_HP_Desktop_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","s","formControl","assign","Input","_ref2","createField","placeholder","component","validate","text","redux_form__WEBPACK_IMPORTED_MODULE_2__","Boolean","window","location","hostname","match","isAuth","captchUrl","setAuthUserData","payload","authMe","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","getCaptcha","_ref3","_callee3","captchaUrl","_context3","url","_x3","authReducer","objectSpread2","initialized","appReducer","sidebarReducer","updateObjectArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFatching","followingInProgress","followSuccess","user","unfollowSuccess","setToggleIsFetching","isFetching","setFollowingInProgress","followUnfollowFlow","_ref4","_callee4","apiMethod","actionCreator","_context4","_x4","_x5","_x6","_x7","usersReducer","followed","totalCount","pageNumber","toConsumableArray","filter","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Navbar","react_default","NavLink","to","activeClassName","active","Paginator","totalItemsCount","onCangePage","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","pageNamber","key","User","src","photos","small","userPhoto","disabled","some","Users","common_Paginator_Paginator","Users_User","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFatching","getFollowingInProgress","getIsAuth","UsersContainer","_this","requestUsers","Fragment","Preloader","components_Users_Users","React","Component","connect","_callee2","_context2","bind","_x2","page","Header","header","HeaderContainer","components_Header_Header","LoginReduxForm","reduxForm","handleSubmit","onSubmit","requiredField","forSummaryError","stopSubmit","_error","Redirect","console","log","withSuspens","react","fallback","DialogsContainer","lazy","e","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","Users_UsersContainer","login_Login","AppContainer","withRouter","MainApp","HashRouter","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_imges_loading_gif_gif__WEBPACK_IMPORTED_MODULE_1__","_imges_loading_gif_gif__WEBPACK_IMPORTED_MODULE_1___default","preloaderGif","width","maxLengthCreator","value","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","savePhotoSuccess","userInfo","C_Users_HP_Desktop_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_HP_Desktop_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_ref5","_callee5","getState","_context5","abrupt","Promise","reject","newPost","C_Users_HP_Desktop_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__","C_Users_HP_Desktop_react_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"static/js/main.d29b4d01.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Darya' },\r\n        { id: 2, name: 'Dima' },\r\n        { id: 3, name: 'Alex' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How a u?' },\r\n        { id: 3, message: 'Ok)' }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 7, message: body }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/photo.9fb36427.jpg\";","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"9cc2d60a-aa04-4bfb-8ef9-14dfe08c3a3b\"\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/` + userId)\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/` + userId)\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    getUserInfo(userId) {\r\n        return profileAPI.getUserInfo(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getUserInfo(userId) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append(\"Image\", photoFile);\r\n\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(file) {\r\n        return instance.put(`profile/`, file)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false, captcha=null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(response => response.data)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__3luEr\",\"selectedPage\":\"Users_selectedPage__2wVm4\"};","module.exports = __webpack_public_path__ + \"static/media/loading-gif.c336831c.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1fiB0\",\"item\":\"Navbar_item__3hJGI\",\"activeLink\":\"Navbar_activeLink__3Pbfl\"};","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport s from './FormsControl.module.css';\r\n\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, component, name, validate, props, text = \"\") => (<div>\r\n    <Field placeholder={placeholder} component={component} name={name} validate={validate} {...props} />{text}\r\n</div>)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'react/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'react/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } })\r\nexport const getCaptchaUrlSuccess = (captchUrl) => ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchUrl } })\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n    let data = await authAPI.getAuth()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login, true))\r\n    }\r\n\r\n}\r\n\r\nexport const login = (login, password, rememberMe, captcha) => async (dispatch) => {\r\n    let data = await authAPI.login(login, password, rememberMe, captcha)\r\n    if (data.resultCode === 0) {\r\n        dispatch(authMe())\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n\r\n        }\r\n        let message = (data.messages.length > 0 ? data.messages[0] : \"Some error\")\r\n        dispatch(stopSubmit(\"login\", { _error: message }))\r\n    }\r\n}\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    let data = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport default authReducer;","import { authMe } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_USERS_TOTAL_COUNT = 'SET-USERS-TOTAL-COUNT'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst FOLLOWING_IN_PROGRESS = 'TOGGLFOLLOWING_IN_PROGRESS'\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFatching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, \"id\", { followed: true })\r\n                // users: [...state.users]\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, \"id\", { followed: false })\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         console.log(u.followed);\r\n                //         return { ...u, followed: false }\r\n                //     }\r\n                //     return u\r\n                // })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFatching: action.isFetching\r\n            }\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFatching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//ActionCreators\r\nexport const followSuccess = (user) => ({ type: FOLLOW, userId: user })\r\nexport const unfollowSuccess = (user) => ({ type: UNFOLLOW, userId: user })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setUsersTotalCount = (totalCount) => ({ type: SET_USERS_TOTAL_COUNT, totalCount })\r\nexport const setCurrentPage = (pageNumber) => ({ type: SET_CURRENT_PAGE, pageNumber })\r\nexport const setToggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const setFollowingInProgress = (isFatching, userId) => ({ type: FOLLOWING_IN_PROGRESS, isFatching, userId })\r\n\r\n//ThunkCreators\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(setToggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize).\r\n        then(data => {\r\n            dispatch(setToggleIsFetching(false))\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n        })\r\n}\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess)\r\n}\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(userId), unfollowSuccess)\r\n}\r\n\r\n//function\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n    dispatch(setFollowingInProgress(true, userId))\r\n    let resultCode = await apiMethod(userId)\r\n    if (resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setFollowingInProgress(false, userId))\r\n}\r\n\r\nexport default usersReducer;","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)\r\n  ));\r\n// let store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n// window.state = store\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react'\r\nimport s from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onCangePage, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++)\r\n        pages.push(i)\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}> {'<<'} </button>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => <span className={cn({\r\n                        [s.selectedPage]:currentPage === p}, s.pageNamber)}\r\n                        key={p}\r\n                        onClick={() => { onCangePage(p) }}>{p}</span>)\r\n            }\r\n            {portionNumber < portionCount &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}> {'>>'} </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator","import React from 'react'\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../imges/photo.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = ({user,followingInProgress,unfollow,follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div className={s.item}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => { unfollow(user.id) }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => {follow(user.id) }}>Follow</button>\r\n                    }\r\n\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n            </span>\r\n            <span>\r\n                <div>{\"user.location.country\"}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\n\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nconst Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage} totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} onCangePage={props.onCangePage} />\r\n            {\r\n                props.users.map(u => <User key={u.id} user={u} \r\n                    followingInProgress={props.followingInProgress} \r\n                    unfollow={props.unfollow} \r\n                    follow={props.follow} />)\r\n               \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFatching = (state) => {\r\n    return state.usersPage.isFatching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, requestUsers } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { getCurrentPage, getFollowingInProgress, getIsAuth, getIsFatching, getPageSize, getTotalUsersCount, getUsers } from '../../redux/users-selector';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onCangePage = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            {this.props.isFatching ? <Preloader /> : ''}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n                onCangePage={this.onCangePage}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFatching: getIsFatching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { follow, unfollow, requestUsers })(UsersContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://img2.freepng.ru/20180412/tae/kisspng-computer-icons-service-mark-symbol-logo-trademark-dot-5ad008be402cd9.9401964215235831662629.jpg' />\r\n            <div className={s.login}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n\r\n            </div>\r\n        </header>)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthUserData, authMe, logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     this.props.authMe()\r\n    // }\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { requiredField } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControl';\r\nimport s from '../common/FormsControls/FormsControl.module.css'\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        props.login(formData.login, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"} />\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchUrl={props.captchUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchUrl }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            { createField(\"Login\", Input, \"login\", [requiredField])}\r\n            { createField(\"Password\", Input, \"password\", [requiredField], { type: \"password\" })}\r\n            { createField(null, Input, \"rememberMe\", [], { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {captchUrl && <img src={captchUrl} />}\r\n            {captchUrl && createField(\"Symbols from image\", Input, \"captcha\", [requiredField])}\r\n\r\n            {error &&\r\n                <div className={s.forSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchUrl: state.auth.captchUrl\r\n})\r\nexport default connect(mapStateToProps, { login })(Login)\r\n\r\n","import React, { Suspense } from 'react';\r\n\r\nexport const withSuspens = (Component) => {\r\n\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Lading...</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Route, withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\n\r\nimport store from \"./redux/redux-store\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/login/Login';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { withSuspens } from './hoc/withSuspans';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized)\r\n            return <Preloader />\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                        render={withSuspens(DialogsContainer)} />\r\n\r\n                    <Route path='/profile/:id?'\r\n                        render={withSuspens(ProfileContainer)} />\r\n\r\n                    <Route path='/users'\r\n                        render={() => <UsersContainer />} />\r\n                    <Route path='/login'\r\n                        render={() => <Login />} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\nconst MainApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\nexport default MainApp","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp />, document.getElementById('root'));\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__H_tN-\",\"error\":\"FormsControl_error__HUXxC\",\"forSummaryError\":\"FormsControl_forSummaryError__1AZzF\"};","import React from 'react'\r\nimport preloaderGif from '../../../imges/loading-gif.gif';\r\n\r\nconst Preloader = ()=>{\r\n\r\n    return(\r\n       <img src={preloaderGif} width='100px' />\r\n    )\r\n}\r\nexport default Preloader","export const requiredField = value =>{\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength)=> (value)=>{\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Oglf\",\"selectedPage\":\"Paginator_selectedPage__2hK1C\",\"pageNamber\":\"Paginator_pageNamber__1OZ8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3MhMc\",\"login\":\"Header_login__1Eu4T\"};","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\nconst SAVE_PROFILE_SUCCESS = 'SAVE_PROFILE_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi!!', likesCount: 21 },\r\n        { id: 2, message: 'How are you?', likesCount: 37 },\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                // newPostText: ''\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.file }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const savePhotoSuccess = (file) => ({ type: SAVE_PHOTO_SUCCESS, file })\r\nexport const saveProfileSuccess = (file) => ({ type: SAVE_PROFILE_SUCCESS, file })\r\n\r\n//Thunck-Creators\r\nexport const userInfo = (userId) => async (dispatch) => {\r\n    let data = await usersAPI.getUserInfo(userId)\r\n    dispatch(setUserProfile(data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status));\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0)\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n}\r\n\r\nexport const saveProfile = (file) => async (dispatch, getState) => {\r\n    let userId = getState().auth.id;\r\n    let response = await profileAPI.saveProfile(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(userInfo(userId));\r\n    }else{\r\n        //dispatch(stopSubmit(\"editProfile\", { \"contacts\": {\"facebook\": response.data.messages[0]} }))\r\n        dispatch(stopSubmit(\"editProfile\", { _error: response.data.messages[0] }))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}